{"version":3,"sources":["bootstrap.ts","locales/i18n.ts","theme.ts","components/button/LinkButton.tsx","components/icons/GitHub.tsx","components/icons/Twitter.tsx","components/shared/Header.tsx","components/shared/Loading.tsx","components/shared/Layout.tsx","components/shared/ErrorBoundary.tsx","components/shared/withLazy.tsx","routes.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["install","resources","en","homePage","vi","i18n","use","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","theme","createMuiTheme","props","MuiButtonBase","disableRipple","palette","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","typography","fontFamily","button","textTransform","useNextVariants","shape","borderRadius","transitions","create","Object","objectSpread","overrides","MuiIconButton","root","padding","spacing","unit","MuiListItemIcon","color","marginRight","MuiSvgIcon","fontSize","shadows","fill","concat","grey","LinkButton","react_default","a","createElement","Button_default","assign","component","NavLink","GitHub","SvgIcon_default","d","muiName","Twitter","useStyles","makeStyles","grow","flexGrow","appBar","zIndex","drawer","container","margin","display","homeButton","width","textAlign","marginLeft","selected","Links","url","title","icon","icons_GitHub","icons_Twitter","Header","classes","_useTranslation","useTranslation","t","slicedToArray","index_es","position","className","disableGutters","item","xs","sm","md","lg","button_LinkButton","variant","to","exact","activeClassName","map","value","index","key","href","target","Loading","memo","toolbar","mixins","Layout","shared_Header","react","fallback","shared_Loading","renderRoutes","route","routes","ErrorBoundary","state","undefined","errorInfo","handleRetry","_this","setState","this","nextProps","nextState","_this$state","Fragment","onClick","children","Component","withLazy","factory","lazy","shared_ErrorBoundary","Home","Promise","all","__webpack_require__","e","then","bind","NotFound","path","App","ThemeProvider_default","CssBaseline_default","BrowserRouter","basename","process","Boolean","window","location","hostname","match","rootElement","document","getElementById","renderFn","ReactDom","render","hasChildNodes","hydrate","src_App","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b5e473f.chunk.js","sourcesContent":["import install from '@material-ui/styles/install';\n\n// const disableReactDevTools = (): void => {\n//   const noop = (): void => undefined;\n//   const DEV_TOOLS = (window as any).__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n//   if (typeof DEV_TOOLS === 'object') {\n//     for (const [key, value] of Object.entries(DEV_TOOLS)) {\n//       DEV_TOOLS[key] = typeof value === 'function' ? noop : null;\n//     }\n//   }\n// };\n\n// disableReactDevTools();\n\ninstall();\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport en_home_page_resources from './en/pages/home.json';\nimport vi_home_page_resources from './vi/pages/home.json';\n\nconst resources = {\n  en: {\n    homePage: en_home_page_resources\n  },\n  vi: {\n    homePage: vi_home_page_resources\n  }\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'vi',\n    fallbackLng: 'vi',\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\n// create a theme instance.\nlet theme = createMuiTheme({\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  },\n  palette: {\n    primary: {\n      light: '#26c281',\n      main: '#3fc380',\n      dark: '#4daf7c',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#29f1c3',\n      main: '#36d7b7',\n      dark: '#4ecdc4',\n      contrastText: '#fff'\n    },\n    error: {\n      light: '#f89406',\n      main: '#f9690e',\n      dark: '#d35400',\n      contrastText: '#fff'\n    },\n    text: {\n      primary: '#24252a',\n      secondary: '#2e3131',\n      disabled: '#dadfe1',\n      hint: '#abb7b7'\n    }\n  },\n  typography: {\n    fontFamily: '\"Quicksand\", sans-serif',\n    button: {\n      textTransform: 'none'\n    },\n    useNextVariants: true\n  },\n  shape: {\n    borderRadius: 0\n  },\n  transitions: {\n    create: () => 'none'\n  }\n});\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiIconButton: {\n      root: {\n        padding: theme.spacing.unit\n      }\n    },\n    MuiListItemIcon: {\n      root: {\n        color: 'inherit',\n        marginRight: 0\n      }\n    },\n    MuiSvgIcon: {\n      root: {\n        fontSize: 20\n      }\n    }\n  },\n  shadows: theme.shadows.fill(`0 0 0 1px ${theme.palette.grey[300]}`)\n};\n\nexport default theme;\n","import React from 'react';\nimport Button, { ButtonProps } from '@material-ui/core/Button';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\ntype Props = ButtonProps & NavLinkProps;\n\nconst LinkButton = (props: Props) => {\n  return <Button component={NavLink} {...props as any} />;\n};\n\nexport default LinkButton;\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nfunction GitHub(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n    </SvgIcon>\n  );\n}\n\nGitHub.muiName = 'SvgIcon';\n\nexport default GitHub;\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nfunction Twitter(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M7.6 21.63c8.95 0 13.84-7.4 13.84-13.84v-.63c.94-.7 1.76-1.55 2.4-2.52-.86.38-1.8.64-2.78.76 1-.6 1.78-1.54 2.14-2.68-.94.56-1.98.96-3.1 1.18-.88-.94-2.14-1.53-3.54-1.53-2.7 0-4.86 2.17-4.86 4.86 0 .38.04.75.12 1.1C7.78 8.14 4.2 6.2 1.8 3.27c-.42.72-.66 1.55-.66 2.44 0 1.7.86 3.18 2.16 4.05-.8-.02-1.55-.24-2.2-.6v.05c0 2.36 1.67 4.33 3.9 4.77-.4.1-.84.17-1.28.17-.32 0-.62-.03-.92-.08.62 1.93 2.42 3.33 4.55 3.37-1.67 1.3-3.76 2.1-6.04 2.1-.4 0-.77-.04-1.15-.08 2.15 1.38 4.7 2.18 7.45 2.18\" />\n    </SvgIcon>\n  );\n}\n\nTwitter.muiName = 'SvgIcon';\n\nexport default Twitter;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { AppBar, Toolbar, Grid, Link, IconButton } from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\n\nimport LinkButton from '../button/LinkButton';\nimport GitHub from '../icons/GitHub';\nimport Twitter from '../icons/Twitter';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  container: {\n    margin: '0 auto',\n    display: 'flex'\n  },\n  homeButton: {\n    width: theme.spacing.unit * 28,\n    textAlign: 'center'\n  },\n  button: {\n    marginLeft: theme.spacing.unit / 2,\n    marginRight: theme.spacing.unit / 2,\n    color: '#fff'\n  },\n  selected: {\n    color: '#fff'\n  }\n}));\n\nconst Links = [\n  {\n    url: 'http://github.com/auvansang/salary-calculator',\n    title: 'Sang Au - GitHub',\n    icon: <GitHub />\n  },\n  {\n    url: 'https://twitter.com/auvansang',\n    title: 'Sang Au - Twitter',\n    icon: <Twitter />\n  }\n];\n\nconst Header = () => {\n  const classes = useStyles();\n  const [t] = useTranslation('homePage');\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar disableGutters>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            sm={10}\n            md={8}\n            lg={6}\n            className={classes.container}\n          >\n            <LinkButton\n              variant=\"outlined\"\n              to={'/'}\n              className={classes.homeButton}\n              exact={true}\n              activeClassName={classes.selected}\n            >\n              {t('homePage')}\n            </LinkButton>\n            <span className={classes.grow} />\n            {Links.map((value, index) => (\n              <Link\n                key={index}\n                href={value.url}\n                title={value.title}\n                target=\"_blank\"\n              >\n                <IconButton className={classes.button}>{value.icon}</IconButton>\n              </Link>\n            ))}\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { memo } from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nconst Loading = memo(() => {\n  return <CircularProgress />;\n});\n\nexport default Loading;\n","import React, { Suspense } from 'react';\nimport { RouteConfig, renderRoutes } from 'react-router-config';\n\nimport { Grid } from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Header from './Header';\nimport Loading from './Loading';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex'\n  },\n  container: {\n    margin: `${theme.spacing.unit * 2}px auto`\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\ntype Props = {\n  route?: RouteConfig;\n};\n\nconst Layout = (props: Props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Grid container>\n        <Grid item xs={12} sm={10} md={8} lg={6} className={classes.container}>\n          <div className={classes.toolbar} />\n          <Suspense fallback={<Loading />}>\n            {renderRoutes(props.route!.routes)}\n          </Suspense>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { Component, ErrorInfo } from 'react';\nimport { Button } from '@material-ui/core';\n\ninterface IError {\n  readonly error?: Error;\n  readonly errorInfo?: ErrorInfo;\n}\n\nclass ErrorBoundary extends Component {\n  state: IError = {\n    error: undefined,\n    errorInfo: undefined\n  };\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  shouldComponentUpdate(nextProps: {}, nextState: IError) {\n    if (nextProps) {\n    }\n\n    if (this.state.errorInfo && !nextState.errorInfo) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleRetry = () => {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined\n    });\n  };\n\n  render() {\n    const { error, errorInfo } = this.state;\n\n    if (errorInfo) {\n      const errorDetails =\n        !process.env.NODE_ENV || process.env.NODE_ENV === 'development' ? (\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error && error.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        ) : (\n          undefined\n        );\n\n      return (\n        <>\n          <h2>Oops!!! Something went wrong.</h2>\n          {errorDetails}\n          <Button variant=\"outlined\" color=\"primary\" onClick={this.handleRetry}>\n            Retry\n          </Button>\n        </>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { ComponentType, lazy } from 'react';\nimport ErrorBoundary from './ErrorBoundary';\n\nconst withLazy = <T extends ComponentType<any>>(\n  factory: () => Promise<{ default: T }>\n) => {\n  const WithLazy = (props: any) => {\n    const Component = lazy(factory);\n\n    return (\n      <ErrorBoundary>\n        <Component {...props} />\n      </ErrorBoundary>\n    );\n  };\n\n  return WithLazy;\n};\n\nexport default withLazy;\n","import { RouteConfig } from 'react-router-config';\n\nimport { withLazy, Layout } from './components/shared';\n\nconst Home = withLazy(() => import('./pages/Home'));\n\nconst NotFound = withLazy(() => import('./pages/NotFound'));\n\nconst routes: RouteConfig[] = [\n  {\n    path: '/',\n    component: Layout,\n    routes: [\n      {\n        path: '/',\n        exact: true,\n        component: Home\n      },\n      {\n        component: NotFound\n      }\n    ]\n  },\n  {\n    component: NotFound\n  }\n];\n\nexport default routes;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\nimport theme from './theme';\n\nimport { ErrorBoundary, Loading } from './components/shared';\nimport routes from './routes';\n\nconst baseUrl = process.env.PUBLIC_URL;\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter basename={baseUrl}>\n        <ErrorBoundary>\n          <Suspense fallback={<Loading />}>{renderRoutes(routes)}</Suspense>\n        </ErrorBoundary>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './bootstrap';\nimport './assets/scss/site.scss';\nimport './locales/i18n';\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nfunction renderApp() {\n  const rootElement = document.getElementById('root')!;\n  let renderFn = ReactDom.render;\n\n  if (rootElement.hasChildNodes()) {\n    renderFn = ReactDom.hydrate;\n  }\n\n  renderFn(<App />, rootElement);\n}\n\nrenderApp();\n\nserviceWorker.unregister();\n\nif (module.hot) {\n  module.hot.accept('./App.tsx', renderApp);\n}\n"],"sourceRoot":""}