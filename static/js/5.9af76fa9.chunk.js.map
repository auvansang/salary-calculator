{"version":3,"sources":["core/constants/SalaryConstant.ts","utils/store/useLocalState.ts","store/Salary.ts","utils/store/createReducer.ts","pages/Home.tsx"],"names":["EMPLOYEE_INSURANCE","EMPLOYER_INSURANCE","MIN_SALARY_RANGE","TAX_RANGE","Number","MAX_SAFE_INTEGER","EXCHANGE_SALARY_RANGE","TAX_RANGE_DETAIL","POSITIVE_INFINITY","useLocalState","reducer","actionCreators","initialState","localState","type","_useReducer","useReducer","_useReducer2","Object","slicedToArray","state","dispatch","actions","useMemo","retActions","keys","forEach","key","action","apply","arguments","getTax","taxableIncome","tax","index","length","taxPercentage","taxAmount","amount","push","getEmployeeInsurance","entity","grossSalary","insuranceSalary","baseInsurance","baseSalary","region","socialInsurance","healthInsurance","unemploymentInsurance","maxUnemploymentInsurance","getEmployerInsurance","netToGross","reductionForDependant","numberOfDependant","temp","income","exachangeTax","filter","value","incomeBeforeTax","employeeInsurance","employerInsurance","personalIncomeTax","reduce","sum","current","employerPayTotal","employerSocialIncurance","employerHelthIncurance","employerUnemploymentInsurance","reductionForPersonal","netSalary","grossToNet","insurance","change","calculateFn","payload","objectSpread","handlers","hasOwnProperty","createReducer","defineProperty","prevState","useStyles","makeStyles","theme","section","paddingLeft","spacing","unit","paddingRight","marginTop","marginBottom","& > div","marginRight","& > label","sectionAction","& > button","& table tr > td:first-child, & table tr > th:first-child","width","textAlign","textBox","Home","_useState","useState","_useState2","setEntity","_useLocalState","_useLocalState2","classes","_useTranslation","useTranslation","t","handleTextChanged","event","targetValue","target","trim","name","parseFloat","handleBaseSalaryRadioChanged","handleRegionRadioChanged","parseInt","handleCalculator","formatCurrency","toLocaleString","minimumFractionDigits","style","currency","react_default","a","createElement","Fragment","Helmet_default","title","meta","content","concat","property","link","rel","href","index_es","component","variant","className","label","margin","onChange","control","checked","aria-label","disabled","color","onClick","icons_index_es","map","to","from"],"mappings":"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","file":"static/js/5.9af76fa9.chunk.js","sourcesContent":["// const MIN_SALARY_RANGE: number[] = [4472600, 3969700, 3477500, 3124400]; 2019\nexport const GENERAL_MIN_SALARY = 1390000;\nexport const REDUCTION_FOR_PERSONAL = 9000000;\nexport const REDUCTION_FOR_DEPENDANT = 3600000;\n\nexport const EMPLOYEE_INSURANCE = {\n  SOCIAL: 8,\n  HEALTH: 1.5,\n  UNEMPLOYEE: 1,\n  ALL: 10.5\n};\n\nexport const EMPLOYER_INSURANCE = {\n  SOCIAL: 17.5,\n  HEALTH: 3,\n  UNEMPLOYEE: 1,\n  ALL: 21.5\n};\n\nexport const MIN_SALARY_RANGE: number[] = [4180000, 3710000, 3250000, 2920000];\nexport const MAXSOCIAL_AND_HEALTH_INSURANCE = 20 * GENERAL_MIN_SALARY;\nexport const TAX_RANGE: number[][] = [\n  [0.05, 5000000],\n  [0.1, 5000000],\n  [0.15, 8000000],\n  [0.2, 14000000],\n  [0.25, 20000000],\n  [0.3, 28000000],\n  [0.35, Number.MAX_SAFE_INTEGER]\n];\n\nexport const EXCHANGE_SALARY_RANGE: number[][] = [\n  [4750000, 0, 950000],\n  [9250000, 250000, 900000],\n  [16050000, 750000, 850000],\n  [27250000, 1650000, 800000],\n  [42250000, 3250000, 750000],\n  [61850000, 5850000, 700000],\n  [Number.MAX_SAFE_INTEGER, 9850000, 650000]\n];\n\nexport const TAX_RANGE_DETAIL: Number[][] = [\n  [0, 5000000, 5],\n  [5000000, 10000000, 10],\n  [10000000, 18000000, 15],\n  [18000000, 32000000, 20],\n  [32000000, 52000000, 25],\n  [52000000, 80000000, 30],\n  [80000000, Number.POSITIVE_INFINITY, 35]\n];\n","import { useMemo, useReducer } from 'react';\n\nconst useLocalState = <S, A extends { [key: string]: any }>(\n  reducer: (state: S, action: any) => S,\n  actionCreators: A,\n  initialState?: S\n): [S, A] => {\n  const localState = reducer(initialState!, {\n    type: '@@LOCAL_STATE/INITIALIZE'\n  });\n  const [state, dispatch] = useReducer(reducer, localState);\n\n  const actions = useMemo(() => {\n    const retActions = {} as A;\n\n    Object.keys(actionCreators).forEach(key => {\n      retActions[key] = (...args: any[]) => {\n        const action = actionCreators[key](...args);\n\n        if (typeof action === 'function') {\n          action(dispatch, state);\n        }\n\n        dispatch(action);\n      };\n    });\n\n    return retActions;\n  }, [actionCreators]);\n\n  return [state, actions];\n};\n\nexport default useLocalState;\n","import createReducer from '../utils/store/createReducer';\nimport SalaryEntity from '../core/entities/SalaryEntity';\nimport {\n  MAXSOCIAL_AND_HEALTH_INSURANCE,\n  MIN_SALARY_RANGE,\n  EXCHANGE_SALARY_RANGE,\n  TAX_RANGE,\n  REDUCTION_FOR_PERSONAL,\n  REDUCTION_FOR_DEPENDANT,\n  EMPLOYEE_INSURANCE,\n  EMPLOYER_INSURANCE\n} from '../core/constants/SalaryConstant';\n\n//#region Action\n\nconst SALARY_CHANGE = '@@SALARY/CHANGE';\n\ninterface ChangeAction {\n  type: typeof SALARY_CHANGE;\n  payload: {\n    grossSalary: number;\n    socialInsurance: number;\n    healthInsurance: number;\n    unemploymentInsurance: number;\n\n    employerSocialIncurance: number;\n    employerHelthIncurance: number;\n    employerUnemploymentInsurance: number;\n    employerPayTotal: number;\n\n    incomeBeforeTax: number;\n    reductionForPersonal: number;\n    reductionForDependant: number;\n\n    taxableIncome: number;\n    tax: Number[];\n    personalIncomeTax: number;\n    netSalary: number;\n  };\n}\n\n//#endregion\n\n//#region Action Creators\n\nconst getTax = (taxableIncome: number) => {\n  let tax: number[] = [];\n\n  for (let index = 0; index < TAX_RANGE.length; index++) {\n    const taxPercentage = TAX_RANGE[index][0];\n    const taxAmount = TAX_RANGE[index][1];\n\n    let amount = taxableIncome <= taxAmount ? taxableIncome : taxAmount;\n    tax.push(amount * taxPercentage);\n    taxableIncome -= taxAmount;\n\n    if (taxableIncome <= 0) {\n      break;\n    }\n  }\n\n  return tax;\n};\n\nconst getEmployeeInsurance = (entity: SalaryEntity, grossSalary: number) => {\n  let insuranceSalary = grossSalary;\n\n  if (!entity.baseInsurance) {\n    insuranceSalary = entity.baseSalary;\n  }\n\n  if (insuranceSalary < MIN_SALARY_RANGE[entity.region - 1]) {\n    return {\n      socialInsurance: 0,\n      healthInsurance: 0,\n      unemploymentInsurance: 0\n    };\n  }\n\n  let socialInsurance = (insuranceSalary * EMPLOYEE_INSURANCE.SOCIAL) / 100;\n  let healthInsurance = (insuranceSalary * EMPLOYEE_INSURANCE.HEALTH) / 100;\n\n  if (~~insuranceSalary > MAXSOCIAL_AND_HEALTH_INSURANCE) {\n    socialInsurance =\n      (MAXSOCIAL_AND_HEALTH_INSURANCE * EMPLOYEE_INSURANCE.SOCIAL) / 100;\n    healthInsurance =\n      (MAXSOCIAL_AND_HEALTH_INSURANCE * EMPLOYEE_INSURANCE.HEALTH) / 100;\n  }\n\n  let maxUnemploymentInsurance = 20 * MIN_SALARY_RANGE[entity.region - 1];\n  let unemploymentInsurance =\n    (insuranceSalary * EMPLOYEE_INSURANCE.UNEMPLOYEE) / 100;\n\n  if (~~insuranceSalary > maxUnemploymentInsurance) {\n    unemploymentInsurance =\n      (maxUnemploymentInsurance * EMPLOYEE_INSURANCE.UNEMPLOYEE) / 100;\n  }\n\n  return {\n    socialInsurance,\n    healthInsurance,\n    unemploymentInsurance\n  };\n};\n\nconst getEmployerInsurance = (entity: SalaryEntity, grossSalary: number) => {\n  let insuranceSalary = grossSalary;\n\n  if (!entity.baseInsurance) {\n    insuranceSalary = entity.baseSalary;\n  }\n\n  if (insuranceSalary < MIN_SALARY_RANGE[entity.region - 1]) {\n    return {\n      socialInsurance: 0,\n      healthInsurance: 0,\n      unemploymentInsurance: 0\n    };\n  }\n\n  let socialInsurance = (insuranceSalary * EMPLOYER_INSURANCE.SOCIAL) / 100;\n  let healthInsurance = (insuranceSalary * EMPLOYER_INSURANCE.HEALTH) / 100;\n\n  if (~~insuranceSalary > MAXSOCIAL_AND_HEALTH_INSURANCE) {\n    socialInsurance =\n      (MAXSOCIAL_AND_HEALTH_INSURANCE * EMPLOYER_INSURANCE.SOCIAL) / 100;\n    healthInsurance =\n      (MAXSOCIAL_AND_HEALTH_INSURANCE * EMPLOYER_INSURANCE.HEALTH) / 100;\n  }\n\n  let maxUnemploymentInsurance = 20 * MIN_SALARY_RANGE[entity.region - 1];\n  let unemploymentInsurance =\n    (insuranceSalary * EMPLOYER_INSURANCE.UNEMPLOYEE) / 100;\n\n  if (~~insuranceSalary > maxUnemploymentInsurance) {\n    unemploymentInsurance =\n      (maxUnemploymentInsurance * EMPLOYER_INSURANCE.UNEMPLOYEE) / 100;\n  }\n\n  return {\n    socialInsurance,\n    healthInsurance,\n    unemploymentInsurance\n  };\n};\n\nconst netToGross = (entity: SalaryEntity) => {\n  let reductionForDependant =\n    REDUCTION_FOR_DEPENDANT * entity.numberOfDependant;\n  let temp = entity.income - REDUCTION_FOR_PERSONAL - reductionForDependant;\n  let exachangeTax = EXCHANGE_SALARY_RANGE.filter(value => temp <= value[0])[0];\n  let taxableIncome = ((temp - exachangeTax[1]) / exachangeTax[2]) * 1000000;\n  let tax: number[] = getTax(taxableIncome);\n  let incomeBeforeTax =\n    taxableIncome + REDUCTION_FOR_PERSONAL + reductionForDependant;\n\n  let grossSalaryExchange =\n    incomeBeforeTax / (1 - EMPLOYEE_INSURANCE.ALL / 100);\n\n  let employeeInsurance = getEmployeeInsurance(entity, grossSalaryExchange);\n\n  let grossSalary =\n    incomeBeforeTax +\n    employeeInsurance.socialInsurance +\n    employeeInsurance.healthInsurance +\n    employeeInsurance.unemploymentInsurance;\n\n  employeeInsurance = getEmployeeInsurance(entity, grossSalary);\n  let employerInsurance = getEmployerInsurance(entity, grossSalary);\n\n  let personalIncomeTax =\n    tax.length > 0\n      ? tax.reduce((sum: number, current: number) => (sum += current))\n      : 0;\n\n  let employerPayTotal =\n    grossSalary +\n    employerInsurance.socialInsurance +\n    employerInsurance.healthInsurance +\n    employerInsurance.unemploymentInsurance;\n\n  return {\n    grossSalary,\n    socialInsurance: employeeInsurance.socialInsurance,\n    healthInsurance: employeeInsurance.healthInsurance,\n    unemploymentInsurance: employeeInsurance.unemploymentInsurance,\n    employerPayTotal,\n\n    employerSocialIncurance: employerInsurance.socialInsurance,\n    employerHelthIncurance: employerInsurance.healthInsurance,\n    employerUnemploymentInsurance: employerInsurance.unemploymentInsurance,\n\n    incomeBeforeTax,\n    reductionForPersonal: REDUCTION_FOR_PERSONAL,\n    reductionForDependant,\n    taxableIncome,\n    tax,\n    personalIncomeTax,\n    netSalary: entity.income\n  };\n};\n\nconst grossToNet = (entity: SalaryEntity) => {\n  let grossSalary = entity.income;\n  let insurance = getEmployeeInsurance(entity, grossSalary);\n  let employerInsurance = getEmployerInsurance(entity, grossSalary);\n  let reductionForDependant =\n    REDUCTION_FOR_DEPENDANT * entity.numberOfDependant;\n\n  let incomeBeforeTax =\n    grossSalary -\n    insurance.socialInsurance -\n    insurance.healthInsurance -\n    insurance.unemploymentInsurance;\n\n  let taxableIncome =\n    incomeBeforeTax - REDUCTION_FOR_PERSONAL - reductionForDependant;\n\n  let tax: number[] = getTax(taxableIncome);\n\n  let personalIncomeTax =\n    tax.length > 0\n      ? tax.reduce((sum: number, current: number) => (sum += current))\n      : 0;\n\n  let employerPayTotal =\n    grossSalary +\n    employerInsurance.socialInsurance +\n    employerInsurance.healthInsurance +\n    employerInsurance.unemploymentInsurance;\n\n  return {\n    grossSalary,\n    socialInsurance: insurance.socialInsurance,\n    healthInsurance: insurance.healthInsurance,\n    unemploymentInsurance: insurance.unemploymentInsurance,\n\n    employerSocialIncurance: employerInsurance.socialInsurance,\n    employerHelthIncurance: employerInsurance.healthInsurance,\n    employerUnemploymentInsurance: employerInsurance.unemploymentInsurance,\n    employerPayTotal,\n\n    incomeBeforeTax,\n    reductionForPersonal: REDUCTION_FOR_PERSONAL,\n    reductionForDependant,\n    taxableIncome,\n    tax,\n    personalIncomeTax,\n    netSalary: incomeBeforeTax - personalIncomeTax\n  };\n};\n\nexport const actionCreators = {\n  change: (entity: SalaryEntity, type: boolean) => {\n    let calculateFn = netToGross;\n\n    if (!type) {\n      calculateFn = grossToNet;\n    }\n\n    return <ChangeAction>{\n      type: SALARY_CHANGE,\n      payload: {\n        entity: entity,\n        ...calculateFn({ ...entity })\n      }\n    };\n  }\n};\n\n//#endregion\n\n//#region State\n\nexport interface State {\n  grossSalary: number;\n  socialInsurance: number;\n  healthInsurance: number;\n  unemploymentInsurance: number;\n\n  employerSocialIncurance: number;\n  employerHelthIncurance: number;\n  employerUnemploymentInsurance: number;\n  employerPayTotal: number;\n\n  incomeBeforeTax: number;\n  reductionForPersonal: number;\n  reductionForDependant: number;\n\n  taxableIncome: number;\n  tax: number[];\n  personalIncomeTax: number;\n  netSalary: number;\n}\n\nconst initialState: State = {\n  grossSalary: 0,\n  socialInsurance: 0,\n  healthInsurance: 0,\n  unemploymentInsurance: 0,\n\n  employerSocialIncurance: 0,\n  employerHelthIncurance: 0,\n  employerUnemploymentInsurance: 0,\n  employerPayTotal: 0,\n\n  incomeBeforeTax: 0,\n  reductionForPersonal: 0,\n  reductionForDependant: 0,\n  taxableIncome: 0,\n  tax: [],\n  personalIncomeTax: 0,\n  netSalary: 0\n};\n\n//#endregion\n\n//#region Reducer\n\nexport const reducer = createReducer(initialState, {\n  [SALARY_CHANGE]: (prevState: State, action: ChangeAction) => ({\n    ...prevState,\n    ...action.payload\n  })\n});\n\n//#endregion\n","const createReducer = <S, A extends { [key: string]: any }>(\n  initialState: S,\n  handlers: { [key: string]: any }\n) => {\n  return (state: S, action: A): S => {\n    state = state || initialState;\n\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    }\n\n    return state;\n  };\n};\n\nexport default createReducer;\n","import React, { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  FormControlLabel,\n  Radio,\n  Button\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport { ArrowRightAltOutlined } from '@material-ui/icons';\n\nimport {\n  GENERAL_MIN_SALARY,\n  EMPLOYEE_INSURANCE,\n  EMPLOYER_INSURANCE,\n  REDUCTION_FOR_PERSONAL,\n  REDUCTION_FOR_DEPENDANT,\n  TAX_RANGE_DETAIL\n} from '../core/constants/SalaryConstant';\n\nimport useLocalState from '../utils/store/useLocalState';\nimport { reducer, actionCreators } from '../store/Salary';\nimport SalaryEntity from '../core/entities/SalaryEntity';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  section: {\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n\n    '& > div': {\n      marginRight: theme.spacing.unit * 2\n    },\n    '& > label': {\n      marginRight: theme.spacing.unit * 12\n    }\n  },\n  sectionAction: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n\n    '& > button': {\n      marginRight: theme.spacing.unit * 2\n    },\n\n    '& table tr > td:first-child, & table tr > th:first-child': {\n      width: 360,\n      textAlign: 'right'\n    }\n  },\n  textBox: {\n    width: theme.spacing.unit * 18\n  }\n}));\n\nconst Home = () => {\n  const [entity, setEntity] = useState(() => {\n    let entity: SalaryEntity = {\n      income: 0,\n      baseInsurance: true,\n      baseSalary: 0,\n      region: 1,\n      numberOfDependant: 0\n    };\n\n    return entity;\n  });\n  const [state, actions] = useLocalState(reducer, actionCreators);\n  const classes = useStyles();\n  const [t] = useTranslation('homePage');\n\n  const handleTextChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let targetValue = event.target.value.trim();\n\n    if (targetValue === '') {\n      targetValue = '0';\n    }\n\n    setEntity({\n      ...entity,\n      [event.target.name]: parseFloat(targetValue)\n    });\n  };\n\n  const handleBaseSalaryRadioChanged = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setEntity({\n      ...entity,\n      [event.target.name]: event.target.value == 'true'\n    });\n  };\n\n  const handleRegionRadioChanged = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setEntity({\n      ...entity,\n      [event.target.name]: parseInt(event.target.value)\n    });\n  };\n\n  const handleCalculator = (type: boolean) => {\n    actions.change(entity, type);\n  };\n\n  const formatCurrency = (value: Number) => {\n    value = value || 0;\n    return value.toLocaleString('vi-VN', {\n      minimumFractionDigits: 2,\n      style: 'currency',\n      currency: t('currency')\n    });\n  };\n\n  return (\n    <>\n      <Helmet\n        title={t('pageTitle')}\n        meta={[\n          {\n            name: 'description',\n            content: `${t('pageDescription')}`\n          },\n          {\n            property: 'og:title',\n            content: `${t('pageTitle')}`\n          },\n          {\n            property: 'og:site_name',\n            content: `${t('pageName')}`\n          },\n          {\n            property: 'og:url',\n            content: `${t('pageUrl')}`\n          },\n          {\n            property: 'og:description',\n            content: `${t('pageDescription')}`\n          },\n          {\n            property: 'og:type',\n            content: `website`\n          },\n          {\n            property: 'og:image',\n            content: `http://localhost:8000/favicon.ico`\n          }\n        ]}\n        link={[\n          {\n            rel: 'canonical',\n            href: `${t('pageUrl')}`\n          }\n        ]}\n      />\n      <Typography component=\"h1\" variant=\"h4\">\n        {t('pageTitle')}\n      </Typography>\n      <Typography component=\"h2\" variant=\"h5\">\n        {t('pageDescription')}\n      </Typography>\n      <br />\n      <Typography component=\"h3\" variant=\"h6\">\n        1. {t('income')}\n      </Typography>\n      <Paper className={classes.section}>\n        <TextField\n          className={classes.textBox}\n          label={t('income')}\n          margin=\"normal\"\n          name=\"income\"\n          type=\"number\"\n          value={entity.income}\n          onChange={handleTextChanged}\n        />\n      </Paper>\n      <Typography component=\"h3\" variant=\"h6\">\n        2. {t('insurance')}\n      </Typography>\n      <Paper className={classes.section}>\n        <FormControlLabel\n          control={\n            <Radio\n              checked={entity.baseInsurance}\n              value={true}\n              name=\"baseInsurance\"\n              aria-label={t('fullWange')}\n              onChange={handleBaseSalaryRadioChanged}\n            />\n          }\n          label={t('fullWange')}\n        />\n        <FormControlLabel\n          control={\n            <Radio\n              checked={!entity.baseInsurance}\n              value={false}\n              name=\"baseInsurance\"\n              aria-label={t('other')}\n              onChange={handleBaseSalaryRadioChanged}\n            />\n          }\n          label={t('other')}\n        />\n        <FormControlLabel\n          control={\n            <TextField\n              className={classes.textBox}\n              margin=\"normal\"\n              name=\"baseSalary\"\n              type=\"number\"\n              disabled={entity.baseInsurance}\n              value={entity.baseSalary}\n              onChange={handleTextChanged}\n            />\n          }\n          label=\"\"\n        />\n      </Paper>\n      <Paper className={classes.section}>\n        <TextField\n          className={classes.textBox}\n          label={t('minimumWage')}\n          margin=\"normal\"\n          name=\"minSalary\"\n          type=\"number\"\n          value={GENERAL_MIN_SALARY}\n        />\n        <TextField\n          className={classes.textBox}\n          label={t('social')}\n          margin=\"normal\"\n          name=\"socialInsurance\"\n          type=\"number\"\n          value={EMPLOYEE_INSURANCE.SOCIAL}\n        />\n        <TextField\n          className={classes.textBox}\n          label={t('health')}\n          margin=\"normal\"\n          name=\"healthInsurance\"\n          type=\"number\"\n          value={EMPLOYEE_INSURANCE.HEALTH}\n        />\n        <TextField\n          className={classes.textBox}\n          label={t('unemployee')}\n          margin=\"normal\"\n          name=\"unemployeeInsurance\"\n          type=\"number\"\n          value={EMPLOYEE_INSURANCE.UNEMPLOYEE}\n        />\n      </Paper>\n      <Paper className={classes.section}>\n        <FormControlLabel\n          control={\n            <Radio\n              checked={entity.region === 1}\n              value={1}\n              name=\"region\"\n              aria-label={t('region', { region: 1 })}\n              onChange={handleRegionRadioChanged}\n            />\n          }\n          label={t('region', { region: 1 })}\n        />\n        <FormControlLabel\n          control={\n            <Radio\n              checked={entity.region === 2}\n              value={2}\n              name=\"region\"\n              aria-label={t('region', { region: 2 })}\n              onChange={handleRegionRadioChanged}\n            />\n          }\n          label={t('region', { region: 2 })}\n        />\n        <FormControlLabel\n          control={\n            <Radio\n              checked={entity.region === 3}\n              value={3}\n              name=\"region\"\n              aria-label={t('region', { region: 3 })}\n              onChange={handleRegionRadioChanged}\n            />\n          }\n          label={t('region', { region: 3 })}\n        />\n        <FormControlLabel\n          control={\n            <Radio\n              checked={entity.region === 4}\n              value={4}\n              name=\"region\"\n              aria-label={t('region', { region: 4 })}\n              onChange={handleRegionRadioChanged}\n            />\n          }\n          label={t('region', { region: 4 })}\n        />\n      </Paper>\n      <Typography component=\"h3\" variant=\"h6\">\n        3. {t('reductionBase')}\n      </Typography>\n      <Paper className={classes.section}>\n        <TextField\n          className={classes.textBox}\n          label={t('personal')}\n          margin=\"normal\"\n          name=\"reductionForPersonal\"\n          type=\"number\"\n          value={REDUCTION_FOR_PERSONAL}\n        />\n        <TextField\n          label={t('dependant')}\n          margin=\"normal\"\n          name=\"reductionForDependant\"\n          type=\"number\"\n          value={REDUCTION_FOR_DEPENDANT}\n        />\n        <TextField\n          className={classes.textBox}\n          label={t('noDependant')}\n          margin=\"normal\"\n          name=\"numberOfDependant\"\n          type=\"number\"\n          value={entity.numberOfDependant}\n          onChange={handleTextChanged}\n        />\n      </Paper>\n      <div className={classes.sectionAction}>\n        <Button\n          variant={'contained'}\n          color=\"primary\"\n          onClick={() => handleCalculator(false)}\n        >\n          {t('gross')} <ArrowRightAltOutlined /> {t('net')}\n        </Button>\n        <Button\n          variant={'contained'}\n          color=\"primary\"\n          onClick={() => handleCalculator(true)}\n        >\n          {t('net')} <ArrowRightAltOutlined /> {t('gross')}\n        </Button>\n      </div>\n      <Typography component=\"h3\" variant=\"h6\">\n        {t('explain')}\n      </Typography>\n      <Paper className={classes.sectionAction}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>{t('grossSalary')}</TableCell>\n              <TableCell>{formatCurrency(state.grossSalary)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                {t('socialInsurance')} ({EMPLOYEE_INSURANCE.SOCIAL}%)\n              </TableCell>\n              <TableCell>{formatCurrency(state.socialInsurance)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                {t('healthInsurance')} ({EMPLOYEE_INSURANCE.HEALTH}%)\n              </TableCell>\n              <TableCell>{formatCurrency(state.healthInsurance)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                {t('unemploymentInsurance')} ({EMPLOYEE_INSURANCE.UNEMPLOYEE}%)\n              </TableCell>\n              <TableCell>\n                {formatCurrency(state.unemploymentInsurance)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>{t('incomeBeforeTax')}</TableCell>\n              <TableCell>{formatCurrency(state.incomeBeforeTax)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>{t('reductionForPersonal')}</TableCell>\n              <TableCell>\n                {formatCurrency(state.reductionForPersonal)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>{t('reductionForDependant')}</TableCell>\n              <TableCell>\n                {formatCurrency(state.reductionForDependant)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>{t('taxableIncome')}</TableCell>\n              <TableCell>{formatCurrency(state.taxableIncome)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>{t('personalIncomeTax')}</TableCell>\n              <TableCell>{formatCurrency(state.personalIncomeTax)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>{t('netSalary')}</TableCell>\n              <TableCell>{formatCurrency(state.netSalary)}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Paper>\n      <Typography component=\"h4\" variant=\"subtitle1\">\n        {t('personalIncomeTaxDetails')}\n      </Typography>\n      <Paper className={classes.sectionAction}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t('theTaxable')}</TableCell>\n              <TableCell>{t('theTaxRate')}</TableCell>\n              <TableCell>{t('thePayment')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {TAX_RANGE_DETAIL.map((value, index) => {\n              if (index === 0) {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      {t('toMillion', {\n                        to: formatCurrency(TAX_RANGE_DETAIL[0][1])\n                      })}\n                    </TableCell>\n                    <TableCell>{`${TAX_RANGE_DETAIL[0][2]}%`}</TableCell>\n                    <TableCell>{formatCurrency(state.tax[0])}</TableCell>\n                  </TableRow>\n                );\n              } else if (index === TAX_RANGE_DETAIL.length - 1) {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      {t('upperMillion', {\n                        from: formatCurrency(TAX_RANGE_DETAIL[6][0])\n                      })}\n                    </TableCell>\n                    <TableCell>{`${TAX_RANGE_DETAIL[6][2]}%`}</TableCell>\n                    <TableCell>{formatCurrency(state.tax[6])}</TableCell>\n                  </TableRow>\n                );\n              } else {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      {t('upperToMillion', {\n                        from: formatCurrency(value[0]),\n                        to: formatCurrency(value[1])\n                      })}\n                    </TableCell>\n                    <TableCell>{`${value[2]}%`}</TableCell>\n                    <TableCell>{formatCurrency(state.tax[index])}</TableCell>\n                  </TableRow>\n                );\n              }\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n      <Typography component=\"h3\" variant=\"h6\">\n        {t('employerPay')}\n      </Typography>\n      <Paper className={classes.sectionAction}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>{t('grossSalary')}</TableCell>\n              <TableCell>{formatCurrency(state.grossSalary)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                {t('socialInsurance')} ({EMPLOYER_INSURANCE.SOCIAL}%)\n              </TableCell>\n              <TableCell>\n                {formatCurrency(state.employerSocialIncurance)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                {t('healthInsurance')} ({EMPLOYER_INSURANCE.HEALTH}%)\n              </TableCell>\n              <TableCell>\n                {formatCurrency(state.employerHelthIncurance)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                {t('unemploymentInsurance')} ({EMPLOYER_INSURANCE.UNEMPLOYEE}%)\n              </TableCell>\n              <TableCell>\n                {formatCurrency(state.employerUnemploymentInsurance)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>{t('total')}</TableCell>\n              <TableCell>{formatCurrency(state.employerPayTotal)}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Paper>\n    </>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}